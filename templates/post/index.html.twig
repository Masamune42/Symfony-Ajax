{% extends 'base.html.twig' %}

{% block title %}Les articles !{% endblock %}

{% block body %}
    <div class="container">
        <h1 class="my-3">Nos articles</h1>
        {% if not is_granted('ROLE_USER') %}
            <a href="/login" class="my-2 btn btn-success">Connexion</a>
        {% else %}
            <a href="/logout" class="my-2 btn btn-danger">Déconnexion</a>
        {% endif %}
        <div class="row">
            {% for post in posts %}
                <div class="col-3 mb-3">
                    <div class="border border-dark rounded p-2">
                        <h3>{{post.title}}</h3>
                        <p>{{post.introduction}}</p>
                        <a href="#" class="btn btn-primary">Lire la suite</a>
                        <a href="{{ path('post_like', {'id': post.id}) }}" class="btn btn-link js-like">
                            {% if app.user and post.isLikedByUser(app.user) %}
                                <i class="fas fa-thumbs-up"></i>
                            {% else %}
                                <i class="far fa-thumbs-up"></i>
                            {% endif %}
                            <span class="js-likes">{{ post.likes | length }}</span>
                            <span class="js-label">J'aime</span>
                        </a>
                    </div>
                </div>
            {% endfor %}
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        function onClickBtnLike(event) {
            event.preventDefault();
            // this => le lien cliqué (<a ...>)
            // URL sur lequel on a cliqué
            const url = this.href;
            // span qui contient le nombre de likes
            const spanCount = this.querySelector('span.js-likes');
            // icone du lien (font-awesome)
            const icone = this.querySelector('i');

            // On envoie l'URL en GET
            axios.get(url).then(function(response) {
                // On récupère le nombre de likes et on le remplace à l'affichage
                spanCount.textContent = response.data.likes;
                // Si la classe de l'icone contient 'fas' ou 'far', on le change (pource rempli / liké <=> pas rempli / non liké)
                if(icone.classList.contains('fas'))
                    icone.classList.replace('fas', 'far')
                else
                    icone.classList.replace('far', 'fas')
            }).catch(function (error) { 
                // Si erreur 403 = user non connecté, on renvoie un message d'erreur
                if (error.response.status === 403) {
                    window.alert("Vous ne pouvez pas liker un artcle si vous n'êtes pas connecté !")
                } else { // Sinon c'est qu'une plus grosse erreur s'est produite
                    window.alert("Une erreur s'est produite")
                }
            })
        }

        // On ajoute un eventListener sur chaque lien à like
        document.querySelectorAll('a.js-like').forEach(function(link) {
            link.addEventListener('click', onClickBtnLike);
        })
    </script>
{% endblock %}